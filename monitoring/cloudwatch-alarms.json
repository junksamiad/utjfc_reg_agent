{
  "backend_monitoring_alarms": [
    {
      "alarm_name": "UTJFC-Backend-HighCPU",
      "description": "Alert when backend CPU usage exceeds 80%",
      "metric_name": "CPUUtilization",
      "namespace": "AWS/EC2",
      "statistic": "Average",
      "period": 300,
      "evaluation_periods": 2,
      "threshold": 80,
      "comparison_operator": "GreaterThanThreshold",
      "alarm_actions": ["arn:aws:sns:eu-north-1:650251723700:utjfc-alerts"]
    },
    {
      "alarm_name": "UTJFC-Backend-HighMemory",
      "description": "Alert when backend memory usage exceeds 85%",
      "metric_name": "MemoryUtilization",
      "namespace": "AWS/ElasticBeanstalk",
      "statistic": "Average",
      "period": 300,
      "evaluation_periods": 2,
      "threshold": 85,
      "comparison_operator": "GreaterThanThreshold"
    },
    {
      "alarm_name": "UTJFC-Backend-ApplicationErrors",
      "description": "Alert when 5xx error rate exceeds 10%",
      "metric_name": "ApplicationRequests5xx",
      "namespace": "AWS/ElasticBeanstalk",
      "statistic": "Sum",
      "period": 300,
      "evaluation_periods": 1,
      "threshold": 5,
      "comparison_operator": "GreaterThanThreshold"
    },
    {
      "alarm_name": "UTJFC-Backend-EnvironmentHealth",
      "description": "Alert when environment health is not Green",
      "metric_name": "EnvironmentHealth",
      "namespace": "AWS/ElasticBeanstalk",
      "statistic": "Average",
      "period": 60,
      "evaluation_periods": 2,
      "threshold": 15,
      "comparison_operator": "LessThanThreshold"
    },
    {
      "alarm_name": "UTJFC-Backend-ResponseTime",
      "description": "Alert when average response time exceeds 5 seconds",
      "metric_name": "ApplicationLatencyP99",
      "namespace": "AWS/ElasticBeanstalk", 
      "statistic": "Average",
      "period": 300,
      "evaluation_periods": 2,
      "threshold": 5,
      "comparison_operator": "GreaterThanThreshold"
    }
  ],
  "current_issues": {
    "instance_type": "t3.small",
    "cpu_cores": 2,
    "memory_gb": 2,
    "current_scaling": {
      "min_instances": 1,
      "max_instances": 4,
      "triggers": "NetworkOut based (not optimal for AI workload)"
    },
    "health_check_missing": "No /health endpoint configured",
    "log_analysis": {
      "pattern": "Only health check 404s, no application crashes visible",
      "note": "Instance appears to respond to requests but health checks failing"
    }
  },
  "recommendations": {
    "immediate": [
      "Upgrade to t3.medium (4GB RAM) minimum for AI processing",
      "Configure proper /health endpoint in FastAPI app",
      "Change auto-scaling trigger from NetworkOut to CPU/Memory",
      "Set MinInstances to 2 for redundancy"
    ],
    "monitoring": [
      "Enable detailed CloudWatch monitoring",
      "Set up SNS topic for alert notifications",
      "Configure application-level metrics for photo processing duration"
    ]
  }
}